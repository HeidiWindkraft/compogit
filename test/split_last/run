#!/usr/bin/env bash

scriptdir="$(cd "$(dirname "$(realpath "${BASH_SOURCE[0]}")" )" >/dev/null && pwd )"
bindir="$(cd "${scriptdir}/../../bin" >/dev/null && pwd )"

# Create a git repository
mkdir gitab
cd gitab
git init
mkdir a
mkdir b

git config user.name "compogit test"
git config user.email test@compogit.com

# Add compogit configuration
cp -r "${scriptdir}/compogit" ./
git add .
git commit -m "Add compogit configuration"

# Create commits which don't touch multiple components.
echo a1 > a/a.txt
echo b1 > b/b.txt
git add a/a.txt
git commit -m "Initial commit to a/a.txt"
git add b/b.txt
git commit -m "Initial commit to b/b.txt"

# Create a commit which touches two components.
echo a2 > a/a.txt
echo b2 > b/b.txt
git add .
git commit -m "Commit to both components"

# Get a log ...
git log --format=format:%s

# Split the last commit.
${bindir}/compogit-split-last-unpushed-commit

# Check whether the commits are as expected.
git log --format=format:%s > logmessages.txt
echo "" >> logmessages.txt

diff -u "${scriptdir}/expected.txt" logmessages.txt > logmessages.diff

status="FAIL"
cmp --silent "${scriptdir}/expected.txt" logmessages.txt && status="ok"
echo $status >> "../status.txt"
